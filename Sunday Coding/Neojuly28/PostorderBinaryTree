import java.util.*;

class Node {
    int key ;
    
    Node left , right;
    
    public Node(int key) {
        this.key = key;
        left = null;
        right = null;
    }
}
class PostorderBinaryTree {
    static Node insert(Node root , int key) {
        if(root == null) {
            root = new Node(key);
            return root;
        }
        
        Queue<Node> q = new LinkedList<Node>();
        q.add(root);
        Node temp = root;
        while(!q.isEmpty()) {
            temp = q.peek();
            q.remove();
            
            if(temp.left == null) {
                temp.left = new Node(key);
                break;
            } else {
                q.add(temp.left);
            }
            if(temp.right == null) {
                temp.right = new Node(key);
                break;
            } else {
                q.add(temp.right);
            }
        }
        
        return root;
    }
    
    static void print(Node root){
        if(root == null) {
            return ;
        }
        
        print(root.left);
        print(root.right);
        System.out.print(root.key + " ");
    }
    
    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        Node root = null;
        for(int i=0;i<5;i++) {
            root = insert(root , sc.nextInt());
        }
        
        print(root);
    }
}